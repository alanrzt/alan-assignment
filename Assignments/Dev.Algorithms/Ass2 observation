1. Gone through the link.. http://www.geeksforgeeks.org/median-of-two-sorted-arrays/
2. The first method stated is by counting on merging format.
3. This is done by comparison and is having a time complexity of O(n).
4. The second method is by comparing the medians of both arrays.
5. If the median of first array is smaller than the median of second array,then terms before median in the first array and terms after median in the second array can be cut off .
6. This can be used because, the median will only lies on rest of the numbers.
7. When m2<m1, vice versa is followed.
8. Here, the time complexity is O(logn).

Algorithm:
1) Calculate the medians m1 and m2 of the input arrays ar1[] and ar2[] respectively.

2) If m1 and m2 both are equal then we are done. return m1 (or m2)

3) If m1 is greater than m2, then median is present in one of the below two subarrays.

a) From first element of ar1 to m1 (ar1[0...|_n/2_|])

b) From m2 to last element of ar2 (ar2[|_n/2_|...n-1])

4) If m2 is greater than m1, then median is present in one of the below two subarrays.

a) From m1 to last element of ar1 (ar1[|_n/2_|...n-1])

b) From first element of ar2 to m2 (ar2[0...|_n/2_|])

5) Repeat the above process until size of both the subarrays becomes 2.

6) If size of the two arrays is 2 then use below formula to get

the median.

Median = (max(ar1[0], ar2[0]) + min(ar1[1], ar2[1]))/2

::: I have also done this problem using loops with a time complexity of O(n^2).
